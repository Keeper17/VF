<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.7" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml">
<path name=".."/><path name="projetoVF.why"/>
<theory name="ExprAritmeticas" proved="true">
 <goal name="Vcon" proved="true">
 <proof prover="0"><result status="valid" time="0.05" steps="12121"/></proof>
 </goal>
 <goal name="Vsim" proved="true">
 <proof prover="0"><result status="valid" time="0.06" steps="12912"/></proof>
 </goal>
 <goal name="Evar" proved="true">
 <proof prover="0"><result status="valid" time="0.06" steps="12314"/></proof>
 </goal>
 <goal name="EBinAdi" proved="true">
 <proof prover="0"><result status="valid" time="0.06" steps="13150"/></proof>
 </goal>
 <goal name="EBinSub" proved="true">
 <proof prover="0"><result status="valid" time="0.07" steps="13147"/></proof>
 </goal>
 <goal name="EBinIgu" proved="true">
 <proof prover="0"><result status="valid" time="0.07" steps="12995"/></proof>
 </goal>
 <goal name="EBinSup" proved="true">
 <proof prover="0"><result status="valid" time="0.08" steps="13665"/></proof>
 </goal>
 <goal name="EBinInf" proved="true">
 <proof prover="0"><result status="valid" time="0.08" steps="13629"/></proof>
 </goal>
 <goal name="EBinMul" proved="true">
 <proof prover="0"><result status="valid" time="0.17" steps="26510"/></proof>
 </goal>
 <goal name="VNeg" proved="true">
 <proof prover="0"><result status="valid" time="0.07" steps="13445"/></proof>
 </goal>
 <goal name="Econ" proved="true">
 <proof prover="0"><result status="valid" time="0.07" steps="13810"/></proof>
 </goal>
 <goal name="Edis" proved="true">
 <proof prover="0"><result status="valid" time="0.09" steps="13554"/></proof>
 </goal>
 <goal name="func_rela_conc" proved="true">
 <transf name="split_all_full" proved="true" >
  <goal name="func_rela_conc.0" proved="true">
  <transf name="induction_pr" proved="true" >
   <goal name="func_rela_conc.0.0" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="13574"/></proof>
   </goal>
   <goal name="func_rela_conc.0.1" proved="true">
   <proof prover="0"><result status="valid" time="0.08" steps="15731"/></proof>
   </goal>
   <goal name="func_rela_conc.0.2" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="13573"/></proof>
   </goal>
   <goal name="func_rela_conc.0.3" proved="true">
   <proof prover="0"><result status="valid" time="0.07" steps="14257"/></proof>
   </goal>
   <goal name="func_rela_conc.0.4" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="13988"/></proof>
   </goal>
   <goal name="func_rela_conc.0.5" proved="true">
   <proof prover="0"><result status="valid" time="0.07" steps="14247"/></proof>
   </goal>
   <goal name="func_rela_conc.0.6" proved="true">
   <proof prover="0"><result status="valid" time="0.05" steps="14247"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="func_rela_conc.1" proved="true">
  <transf name="induction_ty_lex" proved="true" >
   <goal name="func_rela_conc.1.0" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="func_rela_conc.1.0.0" proved="true">
    <proof prover="0"><result status="valid" time="0.07" steps="13732"/></proof>
    </goal>
    <goal name="func_rela_conc.1.0.1" proved="true">
    <proof prover="0"><result status="valid" time="0.10" steps="16467"/></proof>
    </goal>
    <goal name="func_rela_conc.1.0.2" proved="true">
    <proof prover="0"><result status="valid" time="0.07" steps="14991"/></proof>
    </goal>
    <goal name="func_rela_conc.1.0.3" proved="true">
    <proof prover="0"><result status="valid" time="0.08" steps="15976"/></proof>
    </goal>
    <goal name="func_rela_conc.1.0.4" proved="true">
    <proof prover="0"><result status="valid" time="0.08" steps="15860"/></proof>
    </goal>
    <goal name="func_rela_conc.1.0.5" proved="true">
    <proof prover="0"><result status="valid" time="0.11" steps="16018"/></proof>
    </goal>
    <goal name="func_rela_conc.1.0.6" proved="true">
    <proof prover="0"><result status="valid" time="0.17" steps="16285"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="MaqStack" proved="true">
 <goal name="Push" proved="true">
 <proof prover="0"><result status="valid" time="0.09" steps="21967"/></proof>
 </goal>
 <goal name="Load" proved="true">
 <proof prover="0"><result status="valid" time="0.11" steps="20515"/></proof>
 </goal>
 <goal name="Sim" proved="true">
 <proof prover="0"><result status="valid" time="0.13" steps="24088"/></proof>
 </goal>
 <goal name="Plus" proved="true">
 <proof prover="0"><result status="valid" time="0.14" steps="25437"/></proof>
 </goal>
 <goal name="Minus" proved="true">
 <proof prover="0"><result status="valid" time="0.15" steps="25447"/></proof>
 </goal>
 <goal name="Mult" proved="true">
 <proof prover="0"><result status="valid" time="0.74" steps="123930"/></proof>
 </goal>
 <goal name="Igu" proved="true">
 <proof prover="0"><result status="valid" time="0.12" steps="22777"/></proof>
 </goal>
 <goal name="Sup" proved="true">
 <proof prover="0"><result status="valid" time="0.15" steps="23837"/></proof>
 </goal>
 <goal name="Inf" proved="true">
 <proof prover="0"><result status="valid" time="0.12" steps="23841"/></proof>
 </goal>
 <goal name="Neg" proved="true">
 <proof prover="0"><result status="valid" time="0.12" steps="22401"/></proof>
 </goal>
 <goal name="Conj" proved="true">
 <proof prover="0"><result status="valid" time="0.13" steps="22664"/></proof>
 </goal>
 <goal name="Disj" proved="true">
 <proof prover="0"><result status="valid" time="0.13" steps="22752"/></proof>
 </goal>
 <goal name="Program" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="Program.0" proved="true">
  <transf name="assert" proved="true" arg1="(execute s Nil (Cons (SPush 5) (Cons (SLoad &quot;x&quot;) (Cons SMult (Cons SSim Nil)))) = execute s (Cons 5 Nil) (Cons (SLoad &quot;x&quot;) (Cons SMult (Cons SSim Nil))))">
   <goal name="Program.0.0" expl="asserted formula" proved="true">
   <proof prover="0"><result status="valid" time="0.09" steps="19407"/></proof>
   </goal>
   <goal name="Program.0.1" proved="true">
   <transf name="assert" proved="true" arg1="(execute s (Cons 5 Nil) (Cons (SLoad &quot;x&quot;) (Cons SMult (Cons SSim Nil))) = execute s (Cons 10 (Cons 5 Nil)) (Cons SMult (Cons SSim Nil)))">
    <goal name="Program.0.1.0" expl="asserted formula" proved="true">
    <proof prover="0"><result status="valid" time="0.09" steps="19650"/></proof>
    </goal>
    <goal name="Program.0.1.1" proved="true">
    <proof prover="0"><result status="valid" time="0.60" steps="103662"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Compilador">
 <goal name="CompVcon" proved="true">
 <proof prover="0"><result status="valid" time="0.08" steps="21854"/></proof>
 </goal>
 <goal name="CompVsim" proved="true">
 <proof prover="0"><result status="valid" time="0.13" steps="25977"/></proof>
 </goal>
 <goal name="CompEvar" proved="true">
 <proof prover="0"><result status="valid" time="0.09" steps="21856"/></proof>
 </goal>
 <goal name="CompEbin" proved="true">
 <proof prover="0"><result status="valid" time="0.44" steps="94818"/></proof>
 </goal>
 <goal name="CompVneg" proved="true">
 <proof prover="0"><result status="valid" time="0.11" steps="25977"/></proof>
 </goal>
 <goal name="CompEcon" proved="true">
 <proof prover="0"><result status="valid" time="0.16" steps="28026"/></proof>
 </goal>
 <goal name="CompEdis" proved="true">
 <proof prover="0"><result status="valid" time="0.16" steps="27312"/></proof>
 </goal>
 <goal name="comp_corr_aux">
 <transf name="induction_ty_lex" >
  <goal name="comp_corr_aux.0">
  <transf name="split_all_full" >
   <goal name="comp_corr_aux.0.0">
   <transf name="induction_ty_lex" >
    <goal name="comp_corr_aux.0.0.0">
    <transf name="split_all_full" >
     <goal name="comp_corr_aux.0.0.0.0">
     </goal>
     <goal name="comp_corr_aux.0.0.0.1" proved="true">
     <proof prover="0"><result status="valid" time="0.12" steps="25672"/></proof>
     </goal>
     <goal name="comp_corr_aux.0.0.0.2" proved="true">
     <proof prover="0"><result status="valid" time="0.12" steps="25714"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="comp_corr_aux.0.1">
   <transf name="induction_ty_lex" >
    <goal name="comp_corr_aux.0.1.0">
    <transf name="split_all_full" >
     <goal name="comp_corr_aux.0.1.0.0">
     </goal>
     <goal name="comp_corr_aux.0.1.0.1">
     </goal>
     <goal name="comp_corr_aux.0.1.0.2">
     </goal>
     <goal name="comp_corr_aux.0.1.0.3" proved="true">
     <proof prover="0"><result status="valid" time="0.07" steps="22826"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="comp_corr" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="comp_corr.0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="comp_corr.0.0" proved="true">
   <proof prover="0"><result status="valid" time="0.14" steps="27012"/></proof>
   </goal>
   <goal name="comp_corr.0.1" proved="true">
   <proof prover="0"><result status="valid" time="0.18" steps="31396"/></proof>
   </goal>
   <goal name="comp_corr.0.2" proved="true">
   <proof prover="0"><result status="valid" time="0.15" steps="26947"/></proof>
   </goal>
   <goal name="comp_corr.0.3" proved="true">
   <proof prover="0"><result status="valid" time="0.56" steps="81100"/></proof>
   </goal>
   <goal name="comp_corr.0.4" proved="true">
   <proof prover="0"><result status="valid" time="0.17" steps="30605"/></proof>
   </goal>
   <goal name="comp_corr.0.5" proved="true">
   <proof prover="0"><result status="valid" time="0.21" steps="34498"/></proof>
   </goal>
   <goal name="comp_corr.0.6" proved="true">
   <proof prover="0"><result status="valid" time="0.21" steps="33784"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
